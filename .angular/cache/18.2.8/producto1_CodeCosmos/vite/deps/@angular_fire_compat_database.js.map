{
  "version": 3,
  "sources": ["../../../../../../node_modules/@firebase/database-compat/dist/index.esm2017.js", "../../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat-database.mjs"],
  "sourcesContent": ["import firebase from '@firebase/app-compat';\nimport { ComponentContainer, Provider, Component } from '@firebase/component';\nimport { _validatePathString, onChildMoved, onChildChanged, onChildRemoved, onChildAdded, onValue, off, get, query, limitToFirst, limitToLast, orderByChild, orderByKey, orderByPriority, orderByValue, startAt, startAfter, endAt, endBefore, equalTo, _ReferenceImpl, _QueryImpl, _QueryParams, child, set, _validateWritablePath, update, setWithPriority, remove, runTransaction, setPriority, push, OnDisconnect as OnDisconnect$1, forceWebSockets, forceLongPolling, connectDatabaseEmulator, refFromURL, ref, goOffline, goOnline, serverTimestamp, increment, _setSDKVersion, _repoManagerDatabaseFromApp, enableLogging } from '@firebase/database';\nimport { errorPrefix, validateArgCount, validateCallback, validateContextObject, Deferred } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\nconst name = \"@firebase/database-compat\";\nconst version = \"1.0.8\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst logClient = new Logger('@firebase/database-compat');\nconst warn = function (msg) {\n  const message = 'FIREBASE WARNING: ' + msg;\n  logClient.warn(message);\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst validateBoolean = function (fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\nconst validateEventType = function (fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass OnDisconnect {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  cancel(onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n    const result = this._delegate.cancel();\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  remove(onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n    const result = this._delegate.remove();\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  set(value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n    const result = this._delegate.set(value);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  setWithPriority(value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n    const result = this._delegate.setWithPriority(value, priority);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  update(objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n    const result = this._delegate.update(objectToMerge);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass TransactionResult {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  constructor(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON() {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\nclass DataSnapshot {\n  constructor(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n  val() {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  }\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n  exportVal() {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON() {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  }\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n  exists() {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  }\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n  child(path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    path = String(path);\n    _validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  }\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n  hasChild(path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    _validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  }\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n  getPriority() {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  }\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n  forEach(action) {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(expDataSnapshot => action(new DataSnapshot(this._database, expDataSnapshot)));\n  }\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n  hasChildren() {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  }\n  get key() {\n    return this._delegate.key;\n  }\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n  numChildren() {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  }\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n  getRef() {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  }\n  get ref() {\n    return this.getRef();\n  }\n}\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\nclass Query {\n  constructor(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n  on(eventType, callback, cancelCallbackOrContext, context) {\n    var _a;\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    const ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n    const valueCallback = (expSnapshot, previousChildName) => {\n      callback.call(ret.context, new DataSnapshot(this.database, expSnapshot), previousChildName);\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    const cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  }\n  off(eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n    if (callback) {\n      const valueCallback = () => {};\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  }\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n  get() {\n    return get(this._delegate).then(expSnapshot => {\n      return new DataSnapshot(this.database, expSnapshot);\n    });\n  }\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n  once(eventType, callback, failureCallbackOrContext, context) {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    const ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\n    const deferred = new Deferred();\n    const valueCallback = (expSnapshot, previousChildName) => {\n      const result = new DataSnapshot(this.database, expSnapshot);\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n      deferred.resolve(result);\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    const cancelCallback = error => {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n      deferred.reject(error);\n    };\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n    return deferred.promise;\n  }\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n  limitToFirst(limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  }\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n  limitToLast(limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  }\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n  orderByChild(path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  }\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n  orderByKey() {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  }\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n  orderByPriority() {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  }\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n  orderByValue() {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  }\n  startAt(value = null, name) {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  }\n  startAfter(value = null, name) {\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  }\n  endAt(value = null, name) {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  }\n  endBefore(value = null, name) {\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  }\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n  equalTo(value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  }\n  /**\r\n   * @returns URL for this location.\r\n   */\n  toString() {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  }\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n  isEqual(other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n    return this._delegate.isEqual(other._delegate);\n  }\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n  static getCancelAndContextArgs_(fnName, cancelOrContext, context) {\n    const ret = {\n      cancel: undefined,\n      context: undefined\n    };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n    return ret;\n  }\n  get ref() {\n    return new Reference(this.database, new _ReferenceImpl(this._delegate._repo, this._delegate._path));\n  }\n}\nclass Reference extends Query {\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n  constructor(database, _delegate) {\n    super(database, new _QueryImpl(_delegate._repo, _delegate._path, new _QueryParams(), false));\n    this.database = database;\n    this._delegate = _delegate;\n  }\n  /** @returns {?string} */\n  getKey() {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  }\n  child(pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n    return new Reference(this.database, child(this._delegate, pathString));\n  }\n  /** @returns {?Reference} */\n  getParent() {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    const parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  }\n  /** @returns {!Reference} */\n  getRoot() {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  }\n  set(newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    const result = set(this._delegate, newVal);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  update(values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    if (Array.isArray(values)) {\n      const newObjectToMerge = {};\n      for (let i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n    _validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    const result = update(this._delegate, values);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  setWithPriority(newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    const result = setWithPriority(this._delegate, newVal, newPriority);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  remove(onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    const result = remove(this._delegate);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  transaction(transactionUpdate, onComplete, applyLocally) {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    const result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally\n    }).then(transactionResult => new TransactionResult(transactionResult.committed, new DataSnapshot(this.database, transactionResult.snapshot)));\n    if (onComplete) {\n      result.then(transactionResult => onComplete(null, transactionResult.committed, transactionResult.snapshot), error => onComplete(error, false, null));\n    }\n    return result;\n  }\n  setPriority(priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    const result = setPriority(this._delegate, priority);\n    if (onComplete) {\n      result.then(() => onComplete(null), error => onComplete(error));\n    }\n    return result;\n  }\n  push(value, onComplete) {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    const expPromise = push(this._delegate, value);\n    const promise = expPromise.then(expRef => new Reference(this.database, expRef));\n    if (onComplete) {\n      promise.then(() => onComplete(null), error => onComplete(error));\n    }\n    const result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  }\n  onDisconnect() {\n    _validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\n  }\n  get key() {\n    return this.getKey();\n  }\n  get parent() {\n    return this.getParent();\n  }\n  get root() {\n    return this.getRoot();\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Class representing a firebase database.\r\n */\nclass Database {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  constructor(_delegate, app) {\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: () => this._delegate._delete(),\n      forceWebSockets,\n      forceLongPolling\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n   */\n  useEmulator(host, port, options = {}) {\n    connectDatabaseEmulator(this._delegate, host, port, options);\n  }\n  ref(path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n    if (path instanceof Reference) {\n      const childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      const childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  }\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n  refFromURL(url) {\n    const apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }\n  // Make individual repo go offline.\n  goOffline() {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  }\n  goOnline() {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  }\n}\nDatabase.ServerValue = {\n  TIMESTAMP: serverTimestamp(),\n  increment: delta => increment(delta)\n};\n\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\nfunction initStandalone({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  customAppCheckImpl,\n  namespace,\n  nodeAdmin = false\n}) {\n  _setSDKVersion(version);\n  const container = new ComponentContainer('database-standalone');\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n  const authProvider = new Provider('auth-internal', container);\n  authProvider.setComponent(new Component('auth-internal', () => customAuthImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  let appCheckProvider = undefined;\n  if (customAppCheckImpl) {\n    appCheckProvider = new Provider('app-check-internal', container);\n    appCheckProvider.setComponent(new Component('app-check-internal', () => customAppCheckImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  }\n  return {\n    instance: new Database(_repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin), app),\n    namespace\n  };\n}\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ServerValue = Database.ServerValue;\nfunction registerDatabase(instance) {\n  // Register the Database Service with the 'firebase' namespace.\n  instance.INTERNAL.registerComponent(new Component('database-compat', (container, {\n    instanceIdentifier: url\n  }) => {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app-compat').getImmediate();\n    const databaseExp = container.getProvider('database').getImmediate({\n      identifier: url\n    });\n    return new Database(databaseExp, app);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setServiceProps(\n  // firebase.database namespace properties\n  {\n    Reference,\n    Query,\n    Database,\n    DataSnapshot,\n    enableLogging,\n    INTERNAL,\n    ServerValue\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\nregisterDatabase(firebase);\nexport { registerDatabase };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory as _firebaseAppFactory, ɵcacheInstance as _cacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory as _authFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { map, share, scan, withLatestFrom, skipWhile, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, asyncScheduler, merge, of } from 'rxjs';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport firebase from 'firebase/compat/app';\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let fn = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({\n          snapshot,\n          prevKey\n        });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        unsubscribe() {}\n      };\n    }\n  }).pipe(map(payload => {\n    const {\n      snapshot,\n      prevKey\n    } = payload;\n    let key = null;\n    if (snapshot.exists()) {\n      key = snapshot.key;\n    }\n    return {\n      type: event,\n      payload: snapshot,\n      prevKey,\n      key\n    };\n  }), share());\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n  return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n  return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n  return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\nfunction validateEventsArray(events) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\nfunction stateChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\nfunction auditTrail(query, events, scheduler) {\n  const auditTrail$ = stateChanges(query, events).pipe(scan((current, action) => [...current, action], []));\n  return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, 'value', 'on', scheduler).pipe(map(data => {\n    // Store the last key in the data set\n    let lastKeyToLoad;\n    // Loop through loaded dataset to find the last key\n    data.payload.forEach(child => {\n      lastKeyToLoad = child.key;\n      return false;\n    });\n    // return data set and the current last key loaded\n    return {\n      data,\n      lastKeyToLoad\n    };\n  }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n  const loaded$ = loadedData(query, scheduler);\n  return loaded$.pipe(withLatestFrom(action$),\n  // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(([loaded, actions]) => {\n    // Store the last key in the data set\n    const lastKeyToLoad = loaded.lastKeyToLoad;\n    // Store all child keys loaded at this point\n    const loadedKeys = actions.map(snap => snap.key);\n    return {\n      actions,\n      lastKeyToLoad,\n      loadedKeys\n    };\n  }),\n  // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n  // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(meta => meta.actions));\n}\nfunction createDataOperationMethod(ref, operation) {\n  return function dataOperation(item, value) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item)[operation](value),\n      firebaseCase: () => item[operation](value),\n      snapshotCase: () => item.ref[operation](value)\n    });\n  };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n  return function remove(item) {\n    if (!item) {\n      return ref.remove();\n    }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item).remove(),\n      firebaseCase: () => item.remove(),\n      snapshotCase: () => item.ref.remove()\n    });\n  };\n}\nfunction listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n    const childEvent$ = [of(snapshotAction)];\n    events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n    return merge(...childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\nfunction buildView(current, action) {\n  const {\n    payload,\n    prevKey,\n    key\n  } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload?.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {\n            payload,\n            type: 'value',\n            prevKey,\n            key: payload.key\n          };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous?.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\nfunction snapshotChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  return listChanges(query, events, scheduler);\n}\nfunction createListReference(query, afDatabase) {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod(refInZone, 'update'),\n    set: createDataOperationMethod(refInZone, 'set'),\n    push: data => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events) {\n      return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    stateChanges(events) {\n      return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    auditTrail(events) {\n      return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    valueChanges(events, options) {\n      const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(map(actions => actions.map(a => {\n        if (options && options.idField) {\n          return {\n            ...a.payload.val(),\n            ...{\n              [options.idField]: a.key\n            }\n          };\n        } else {\n          return a.payload.val();\n        }\n      })), keepUnstableUntilFirst);\n    }\n  };\n}\nfunction createObjectSnapshotChanges(query, scheduler) {\n  return function snapshotChanges() {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\nfunction createObjectReference(query, afDatabase) {\n  return {\n    query,\n    snapshotChanges() {\n      return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n    },\n    update(data) {\n      return query.ref.update(data);\n    },\n    set(data) {\n      return query.ref.set(data);\n    },\n    remove() {\n      return query.ref.remove();\n    },\n    valueChanges() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n    }\n  };\n}\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n  schedulers;\n  database;\n  constructor(options, name, databaseURL,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, _useEmulator,\n  // tuple isn't working here\n  auth, useAuthEmulator, authSettings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    this.schedulers = schedulers;\n    const useEmulator = _useEmulator;\n    const app = _firebaseAppFactory(options, zone, name);\n    if (auth) {\n      _authFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n    this.database = _cacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n      return database;\n    }, [useEmulator]);\n  }\n  list(pathOrRef, queryFn) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference(query, this);\n  }\n  object(pathOrRef) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference(ref, this);\n  }\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n  static ɵfac = function AngularFireDatabase_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFireDatabase)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularFireDatabase,\n    factory: AngularFireDatabase.ɵfac,\n    providedIn: 'any'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [URL]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: i2.AngularFireAuth,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i3.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nclass AngularFireDatabaseModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n  }\n  static ɵfac = function AngularFireDatabaseModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFireDatabaseModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFireDatabaseModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AngularFireDatabase]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireDatabase]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n"],
  "mappings": "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",
  "names": ["OnDisconnect", "name", "version", "ref", "query", "child", "remove", "prevKey", "payload", "action", "snapshotChanges", "USE_EMULATOR", "name"]
}
